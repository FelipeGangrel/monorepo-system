import{j as t}from"./jsx-runtime-D_zvdyIk.js";/* empty css                */import{r as s}from"./index-CXcpQZ5J.js";import{c as $}from"./index-CiRIfjw3.js";import{u as y}from"./index-Bd7YGvbB.js";import{c as N,R as z,T as H,O as L,W as G,a as W,b as k,D as V,C as h,P as Y}from"./index-BqYToucD.js";import{c as q}from"./index-DW48STyt.js";import{a as U}from"./index-B97ZzoEQ.js";import{c}from"./utils-Dec1Exbm.js";import{b as j,B as J}from"./button-DmDyehya.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./index-CwgaEOf9.js";import"./index-DTz3VF55.js";import"./index-DAer1WYL.js";import"./index-Yg3aDjnU.js";import"./index-BI2CIJjy.js";import"./index-DJQWtO6Q.js";import"./index-D_Yx1edV.js";import"./index-C1fyEfKG.js";import"./index-bNgk5zX4.js";var T="AlertDialog",[K,Se]=$(T,[N]),n=N(),C=e=>{const{__scopeAlertDialog:o,...r}=e,i=n(o);return t.jsx(z,{...i,...r,modal:!0})};C.displayName=T;var Q="AlertDialogTrigger",R=s.forwardRef((e,o)=>{const{__scopeAlertDialog:r,...i}=e,l=n(r);return t.jsx(H,{...l,...i,ref:o})});R.displayName=Q;var X="AlertDialogPortal",_=e=>{const{__scopeAlertDialog:o,...r}=e,i=n(o);return t.jsx(Y,{...i,...r})};_.displayName=X;var Z="AlertDialogOverlay",E=s.forwardRef((e,o)=>{const{__scopeAlertDialog:r,...i}=e,l=n(r);return t.jsx(L,{...l,...i,ref:o})});E.displayName=Z;var d="AlertDialogContent",[ee,oe]=K(d),w=s.forwardRef((e,o)=>{const{__scopeAlertDialog:r,children:i,...l}=e,A=n(r),g=s.useRef(null),B=y(o,g),f=s.useRef(null);return t.jsx(G,{contentName:d,titleName:P,docsSlug:"alert-dialog",children:t.jsx(ee,{scope:r,cancelRef:f,children:t.jsxs(W,{role:"alertdialog",...A,...l,ref:B,onOpenAutoFocus:q(l.onOpenAutoFocus,p=>{var u;p.preventDefault(),(u=f.current)==null||u.focus({preventScroll:!0})}),onPointerDownOutside:p=>p.preventDefault(),onInteractOutside:p=>p.preventDefault(),children:[t.jsx(U,{children:i}),t.jsx(te,{contentRef:g})]})})})});w.displayName=d;var P="AlertDialogTitle",b=s.forwardRef((e,o)=>{const{__scopeAlertDialog:r,...i}=e,l=n(r);return t.jsx(k,{...l,...i,ref:o})});b.displayName=P;var O="AlertDialogDescription",S=s.forwardRef((e,o)=>{const{__scopeAlertDialog:r,...i}=e,l=n(r);return t.jsx(V,{...l,...i,ref:o})});S.displayName=O;var re="AlertDialogAction",M=s.forwardRef((e,o)=>{const{__scopeAlertDialog:r,...i}=e,l=n(r);return t.jsx(h,{...l,...i,ref:o})});M.displayName=re;var I="AlertDialogCancel",F=s.forwardRef((e,o)=>{const{__scopeAlertDialog:r,...i}=e,{cancelRef:l}=oe(I,r),A=n(r),g=y(o,l);return t.jsx(h,{...A,...i,ref:g})});F.displayName=I;var te=({contentRef:e})=>{const o=`\`${d}\` requires a description for the component to be accessible for screen reader users.

You can add a description to the \`${d}\` by passing a \`${O}\` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an \`id\` and passing the same value to the \`aria-describedby\` prop in \`${d}\`. If the description is confusing or duplicative for sighted users, you can use the \`@radix-ui/react-visually-hidden\` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog`;return s.useEffect(()=>{var i;document.getElementById((i=e.current)==null?void 0:i.getAttribute("aria-describedby"))||console.warn(o)},[o,e]),null},ae=C,ie=R,se=_,le=E,ne=w,ce=M,de=F,pe=b,ge=S;const a=ae;a.displayName="AlertDialog";a.Trigger=ie;a.Trigger.displayName="AlertDialog.Trigger";a.Portal=se;a.Portal.displayName="AlertDialog.Portal";a.Overlay=s.forwardRef(({className:e,...o},r)=>t.jsx(le,{className:c("core-fixed core-inset-0 core-z-50 core-bg-black/80 data-[state=open]:core-animate-in data-[state=closed]:core-animate-out data-[state=closed]:core-fade-out-0 data-[state=open]:core-fade-in-0",e),...o,ref:r}));a.Overlay.displayName="AlertDialog.Overlay";a.Content=s.forwardRef(({className:e,...o},r)=>t.jsxs(a.Portal,{children:[t.jsx(a.Overlay,{}),t.jsx(ne,{ref:r,className:c("core-fixed core-left-[50%] core-top-[50%] core-z-50 core-grid core-w-full core-max-w-lg core-translate-x-[-50%] core-translate-y-[-50%] core-gap-4 core-border core-bg-background core-p-6 core-shadow-lg core-duration-200 data-[state=open]:core-animate-in data-[state=closed]:core-animate-out data-[state=closed]:core-fade-out-0 data-[state=open]:core-fade-in-0 data-[state=closed]:core-zoom-out-95 data-[state=open]:core-zoom-in-95 data-[state=closed]:core-slide-out-to-left-1/2 data-[state=closed]:core-slide-out-to-top-[48%] data-[state=open]:core-slide-in-from-left-1/2 data-[state=open]:core-slide-in-from-top-[48%] sm:core-rounded-lg",e),...o})]}));a.Content.displayName="AlertDialog.Content";a.Header=({className:e,...o})=>t.jsx("div",{className:c("core-flex core-flex-col core-space-y-2 core-text-center sm:core-text-left",e),...o});a.Header.displayName="AlertDialog.Header";a.Footer=({className:e,...o})=>t.jsx("div",{className:c("core-flex core-flex-col-reverse sm:core-flex-row sm:core-justify-end sm:core-space-x-2",e),...o});a.Footer.displayName="AlertDialog.Footer";a.Title=s.forwardRef(({className:e,...o},r)=>t.jsx(pe,{ref:r,className:c("core-text-lg core-font-semibold",e),...o}));a.Title.displayName="AlertDialog.Title";a.Description=s.forwardRef(({className:e,...o},r)=>t.jsx(ge,{ref:r,className:c("core-text-sm core-text-muted-foreground",e),...o}));a.Description.displayName="AlertDialog.Description";a.Action=s.forwardRef(({className:e,...o},r)=>t.jsx(ce,{ref:r,className:c(j(),e),...o}));a.Action.displayName="AlertDialog.Action";a.Cancel=s.forwardRef(({className:e,...o},r)=>t.jsx(de,{ref:r,className:c(j({variant:"outline"}),"core-mt-2 sm:core-mt-0",e),...o}));a.Cancel.displayName="AlertDialog.Cancel";const Me={title:"Core UI/AlertDialog",tags:["autodocs"],component:a,parameters:{layout:"centered",docs:{description:{component:"A modal dialog that interrupts the user with important content and expects a response."}}}},m={args:{children:t.jsxs(t.Fragment,{children:[t.jsx(a.Trigger,{asChild:!0,children:t.jsx(J,{children:"Trigger"})}),t.jsxs(a.Content,{children:[t.jsx(a.Title,{children:"Title"}),t.jsx(a.Description,{children:"Description"}),t.jsx(a.Action,{children:"Action"})]})]})},render:e=>t.jsx(a,{...e})};var D,x,v;m.parameters={...m.parameters,docs:{...(D=m.parameters)==null?void 0:D.docs,source:{originalSource:`{
  args: {
    children: <>
        <AlertDialog.Trigger asChild>
          <Button>Trigger</Button>
        </AlertDialog.Trigger>
        <AlertDialog.Content>
          <AlertDialog.Title>Title</AlertDialog.Title>
          <AlertDialog.Description>Description</AlertDialog.Description>
          <AlertDialog.Action>Action</AlertDialog.Action>
        </AlertDialog.Content>
      </>
  },
  render: args => <AlertDialog {...args} />
}`,...(v=(x=m.parameters)==null?void 0:x.docs)==null?void 0:v.source}}};const Ie=["Example"];export{m as Example,Ie as __namedExportsOrder,Me as default};
