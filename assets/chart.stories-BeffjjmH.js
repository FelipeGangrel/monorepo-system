import{j as n}from"./index-B6zMoDbo.js";import{F as v,G as _,H as J,J as Ae,K as x}from"./index-MWPviQxN.js";import{u as ze,a as Be,b as Le,c as Ee,d as Ke,g as we,e as ke,f as je,C as Oe,B as F,h as g,X as I}from"./BarChart-CK-Ql34o.js";import{R as u}from"./index-Dxs5m6lS.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./index-DrFkskS4.js";import"./tiny-invariant-CopsF_GD.js";var Ge=["x1","y1","x2","y2","key"],Te=["offset"];function k(e){"@babel/helpers - typeof";return k=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(t){return typeof t}:function(t){return t&&typeof Symbol=="function"&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},k(e)}function U(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter(function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable})),r.push.apply(r,a)}return r}function y(e){for(var t=1;t<arguments.length;t++){var r=arguments[t]!=null?arguments[t]:{};t%2?U(Object(r),!0).forEach(function(a){Fe(e,a,r[a])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):U(Object(r)).forEach(function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))})}return e}function Fe(e,t,r){return t=Se(t),t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function Se(e){var t=Ne(e,"string");return k(t)=="symbol"?t:t+""}function Ne(e,t){if(k(e)!="object"||!e)return e;var r=e[Symbol.toPrimitive];if(r!==void 0){var a=r.call(e,t);if(k(a)!="object")return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return(t==="string"?String:Number)(e)}function w(){return w=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var a in r)Object.prototype.hasOwnProperty.call(r,a)&&(e[a]=r[a])}return e},w.apply(this,arguments)}function Y(e,t){if(e==null)return{};var r=De(e,t),a,o;if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)a=l[o],!(t.indexOf(a)>=0)&&Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}function De(e,t){if(e==null)return{};var r={};for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){if(t.indexOf(a)>=0)continue;r[a]=e[a]}return r}var Me=function(t){var r=t.fill;if(!r||r==="none")return null;var a=t.fillOpacity,o=t.x,l=t.y,s=t.width,f=t.height,h=t.ry;return u.createElement("rect",{x:o,y:l,ry:h,width:s,height:f,stroke:"none",fill:r,fillOpacity:a,className:"recharts-cartesian-grid-bg"})};function Pe(e,t){var r;if(u.isValidElement(e))r=u.cloneElement(e,t);else if(_(e))r=e(t);else{var a=t.x1,o=t.y1,l=t.x2,s=t.y2,f=t.key,h=Y(t,Ge),c=Ae(h,!1);c.offset;var i=Y(c,Te);r=u.createElement("line",w({},i,{x1:a,y1:o,x2:l,y2:s,fill:"none",key:f}))}return r}function We(e){var t=e.x,r=e.width,a=e.horizontal,o=a===void 0?!0:a,l=e.horizontalPoints;if(!o||!l||!l.length)return null;var s=l.map(function(f,h){var c=y(y({},e),{},{x1:t,y1:f,x2:t+r,y2:f,key:"line-".concat(h),index:h});return Pe(o,c)});return u.createElement("g",{className:"recharts-cartesian-grid-horizontal"},s)}function Xe(e){var t=e.y,r=e.height,a=e.vertical,o=a===void 0?!0:a,l=e.verticalPoints;if(!o||!l||!l.length)return null;var s=l.map(function(f,h){var c=y(y({},e),{},{x1:f,y1:t,x2:f,y2:t+r,key:"line-".concat(h),index:h});return Pe(o,c)});return u.createElement("g",{className:"recharts-cartesian-grid-vertical"},s)}function _e(e){var t=e.horizontalFill,r=e.fillOpacity,a=e.x,o=e.y,l=e.width,s=e.height,f=e.horizontalPoints,h=e.horizontal,c=h===void 0?!0:h;if(!c||!t||!t.length)return null;var i=f.map(function(d){return Math.round(d+o-o)}).sort(function(d,m){return d-m});o!==i[0]&&i.unshift(0);var b=i.map(function(d,m){var j=!i[m+1],p=j?o+s-d:i[m+1]-d;if(p<=0)return null;var C=m%t.length;return u.createElement("rect",{key:"react-".concat(m),y:d,x:a,height:p,width:l,stroke:"none",fill:t[C],fillOpacity:r,className:"recharts-cartesian-grid-bg"})});return u.createElement("g",{className:"recharts-cartesian-gridstripes-horizontal"},b)}function Ie(e){var t=e.vertical,r=t===void 0?!0:t,a=e.verticalFill,o=e.fillOpacity,l=e.x,s=e.y,f=e.width,h=e.height,c=e.verticalPoints;if(!r||!a||!a.length)return null;var i=c.map(function(d){return Math.round(d+l-l)}).sort(function(d,m){return d-m});l!==i[0]&&i.unshift(0);var b=i.map(function(d,m){var j=!i[m+1],p=j?l+f-d:i[m+1]-d;if(p<=0)return null;var C=m%a.length;return u.createElement("rect",{key:"react-".concat(m),x:d,y:s,width:p,height:h,stroke:"none",fill:a[C],fillOpacity:o,className:"recharts-cartesian-grid-bg"})});return u.createElement("g",{className:"recharts-cartesian-gridstripes-vertical"},b)}var $e=function(t,r){var a=t.xAxis,o=t.width,l=t.height,s=t.offset;return we(ke(y(y(y({},Oe.defaultProps),a),{},{ticks:je(a,!0),viewBox:{x:0,y:0,width:o,height:l}})),s.left,s.left+s.width,r)},He=function(t,r){var a=t.yAxis,o=t.width,l=t.height,s=t.offset;return we(ke(y(y(y({},Oe.defaultProps),a),{},{ticks:je(a,!0),viewBox:{x:0,y:0,width:o,height:l}})),s.top,s.top+s.height,r)},O={horizontal:!0,vertical:!0,stroke:"#ccc",fill:"none",verticalFill:[],horizontalFill:[]};function S(e){var t,r,a,o,l,s,f=ze(),h=Be(),c=Le(),i=y(y({},e),{},{stroke:(t=e.stroke)!==null&&t!==void 0?t:O.stroke,fill:(r=e.fill)!==null&&r!==void 0?r:O.fill,horizontal:(a=e.horizontal)!==null&&a!==void 0?a:O.horizontal,horizontalFill:(o=e.horizontalFill)!==null&&o!==void 0?o:O.horizontalFill,vertical:(l=e.vertical)!==null&&l!==void 0?l:O.vertical,verticalFill:(s=e.verticalFill)!==null&&s!==void 0?s:O.verticalFill,x:v(e.x)?e.x:c.left,y:v(e.y)?e.y:c.top,width:v(e.width)?e.width:c.width,height:v(e.height)?e.height:c.height}),b=i.x,d=i.y,m=i.width,j=i.height,p=i.syncWithTicks,C=i.horizontalValues,X=i.verticalValues,P=Ee(),A=Ke();if(!v(m)||m<=0||!v(j)||j<=0||!v(b)||b!==+b||!v(d)||d!==+d)return null;var $=i.verticalCoordinatesGenerator||$e,H=i.horizontalCoordinatesGenerator||He,z=i.horizontalPoints,B=i.verticalPoints;if((!z||!z.length)&&_(H)){var V=C&&C.length,M=H({yAxis:A?y(y({},A),{},{ticks:V?C:A.ticks}):void 0,width:f,height:h,offset:c},V?!0:p);J(Array.isArray(M),"horizontalCoordinatesGenerator should return Array but instead it returned [".concat(k(M),"]")),Array.isArray(M)&&(z=M)}if((!B||!B.length)&&_($)){var R=X&&X.length,W=$({xAxis:P?y(y({},P),{},{ticks:R?X:P.ticks}):void 0,width:f,height:h,offset:c},R?!0:p);J(Array.isArray(W),"verticalCoordinatesGenerator should return Array but instead it returned [".concat(k(W),"]")),Array.isArray(W)&&(B=W)}return u.createElement("g",{className:"recharts-cartesian-grid"},u.createElement(Me,{fill:i.fill,fillOpacity:i.fillOpacity,x:i.x,y:i.y,width:i.width,height:i.height,ry:i.ry}),u.createElement(We,w({},i,{offset:c,horizontalPoints:z,xAxis:P,yAxis:A})),u.createElement(Xe,w({},i,{offset:c,verticalPoints:B,xAxis:P,yAxis:A})),u.createElement(_e,w({},i,{horizontalPoints:z})),u.createElement(Ie,w({},i,{verticalPoints:B})))}S.displayName="CartesianGrid";const Ze={title:"Core UI/Chart",component:x,tags:["autodocs"],parameters:{layout:"centered",docs:{description:{component:"Beautiful charts. Built using Recharts. Copy and paste into your apps."}}}},N={desktop:{label:"Desktop",color:"#2563eb"},mobile:{label:"Mobile",color:"#60a5fa"}},D=[{month:"January",desktop:186,mobile:80},{month:"February",desktop:305,mobile:200},{month:"March",desktop:237,mobile:120},{month:"April",desktop:73,mobile:190},{month:"May",desktop:209,mobile:130},{month:"June",desktop:214,mobile:140}],L={args:{config:N,className:"min-h-[200px] w-screen max-w-[400px]",children:n.jsxs(F,{accessibilityLayer:!0,data:D,children:[n.jsx(g,{dataKey:"desktop",fill:"var(--color-desktop)",radius:4}),n.jsx(g,{dataKey:"mobile",fill:"var(--color-mobile)",radius:4})]})},render:e=>n.jsx(x,{...e})},E={args:{config:N,className:"min-h-[200px] w-screen max-w-[400px]",children:n.jsxs(F,{accessibilityLayer:!0,data:D,children:[n.jsx(S,{vertical:!1}),n.jsx(g,{dataKey:"desktop",fill:"var(--color-desktop)",radius:4}),n.jsx(g,{dataKey:"mobile",fill:"var(--color-mobile)",radius:4})]})},render:e=>n.jsx(x,{...e})},K={args:{config:N,className:"min-h-[200px] w-screen max-w-[400px]",children:n.jsxs(F,{accessibilityLayer:!0,data:D,children:[n.jsx(S,{vertical:!1}),n.jsx(I,{dataKey:"month",tickLine:!1,tickMargin:10,axisLine:!1,tickFormatter:e=>e.slice(0,3)}),n.jsx(g,{dataKey:"desktop",fill:"var(--color-desktop)",radius:4}),n.jsx(g,{dataKey:"mobile",fill:"var(--color-mobile)",radius:4})]})},render:e=>n.jsx(x,{...e})},G={args:{config:N,className:"min-h-[200px] w-screen max-w-[400px]",children:n.jsxs(F,{accessibilityLayer:!0,data:D,children:[n.jsx(S,{vertical:!1}),n.jsx(I,{dataKey:"month",tickLine:!1,tickMargin:10,axisLine:!1,tickFormatter:e=>e.slice(0,3)}),n.jsx(x.Tooltip,{content:n.jsx(x.TooltipContent,{})}),n.jsx(g,{dataKey:"desktop",fill:"var(--color-desktop)",radius:4}),n.jsx(g,{dataKey:"mobile",fill:"var(--color-mobile)",radius:4})]})},render:e=>n.jsx(x,{...e})},T={args:{config:N,className:"min-h-[200px] w-screen max-w-[400px]",children:n.jsxs(F,{accessibilityLayer:!0,data:D,children:[n.jsx(S,{vertical:!1}),n.jsx(I,{dataKey:"month",tickLine:!1,tickMargin:10,axisLine:!1,tickFormatter:e=>e.slice(0,3)}),n.jsx(x.Tooltip,{content:n.jsx(x.TooltipContent,{})}),n.jsx(x.Legend,{content:n.jsx(x.LegendContent,{})}),n.jsx(g,{dataKey:"desktop",fill:"var(--color-desktop)",radius:4}),n.jsx(g,{dataKey:"mobile",fill:"var(--color-mobile)",radius:4})]})},render:e=>n.jsx(x,{...e})};var q,Q,Z,ee,te;L.parameters={...L.parameters,docs:{...(q=L.parameters)==null?void 0:q.docs,source:{originalSource:`{
  args: {
    config: barChartConfig,
    className: 'min-h-[200px] w-screen max-w-[400px]',
    children: <BarChart accessibilityLayer data={barChartData}>
        <Bar dataKey="desktop" fill="var(--color-desktop)" radius={4} />
        <Bar dataKey="mobile" fill="var(--color-mobile)" radius={4} />
      </BarChart>
  },
  render: args => <Chart {...args} />
}`,...(Z=(Q=L.parameters)==null?void 0:Q.docs)==null?void 0:Z.source},description:{story:'A simple bar chart example displaying data for "Desktop" and "Mobile".\nThe chart is rendered using the `Chart` component with data visualization\npowered by Recharts.',...(te=(ee=L.parameters)==null?void 0:ee.docs)==null?void 0:te.description}}};var ae,re,ie,ne,oe;E.parameters={...E.parameters,docs:{...(ae=E.parameters)==null?void 0:ae.docs,source:{originalSource:`{
  args: {
    config: barChartConfig,
    className: 'min-h-[200px] w-screen max-w-[400px]',
    children: <BarChart accessibilityLayer data={barChartData}>
        <CartesianGrid vertical={false} />
        <Bar dataKey="desktop" fill="var(--color-desktop)" radius={4} />
        <Bar dataKey="mobile" fill="var(--color-mobile)" radius={4} />
      </BarChart>
  },
  render: args => <Chart {...args} />
}`,...(ie=(re=E.parameters)==null?void 0:re.docs)==null?void 0:ie.source},description:{story:`A bar chart example with added grid lines for better data visualization.
This chart displays data for "Desktop" and "Mobile" categories, with
grid lines to enhance readability. It uses the \`CartesianGrid\` component
from Recharts. Try this example to see how grid lines affect data presentation.`,...(oe=(ne=E.parameters)==null?void 0:ne.docs)==null?void 0:oe.description}}};var le,se,ce,de,he;K.parameters={...K.parameters,docs:{...(le=K.parameters)==null?void 0:le.docs,source:{originalSource:`{
  args: {
    config: barChartConfig,
    className: 'min-h-[200px] w-screen max-w-[400px]',
    children: <BarChart accessibilityLayer data={barChartData}>
        <CartesianGrid vertical={false} />
        <XAxis dataKey="month" tickLine={false} tickMargin={10} axisLine={false} tickFormatter={value => value.slice(0, 3)} />
        <Bar dataKey="desktop" fill="var(--color-desktop)" radius={4} />
        <Bar dataKey="mobile" fill="var(--color-mobile)" radius={4} />
      </BarChart>
  },
  render: args => <Chart {...args} />
}`,...(ce=(se=K.parameters)==null?void 0:se.docs)==null?void 0:ce.source},description:{story:'A bar chart example with both grid lines and an X-axis for enhanced readability and data organization.\nThis chart provides a monthly breakdown for "Desktop" and "Mobile" metrics, using the `CartesianGrid` and `XAxis` components\nfrom Recharts. The X-axis ticks are formatted to display only the first three letters of the month.',...(he=(de=K.parameters)==null?void 0:de.docs)==null?void 0:he.description}}};var fe,me,ue,ye,xe;G.parameters={...G.parameters,docs:{...(fe=G.parameters)==null?void 0:fe.docs,source:{originalSource:`{
  args: {
    config: barChartConfig,
    className: 'min-h-[200px] w-screen max-w-[400px]',
    children: <BarChart accessibilityLayer data={barChartData}>
        <CartesianGrid vertical={false} />
        <XAxis dataKey="month" tickLine={false} tickMargin={10} axisLine={false} tickFormatter={value => value.slice(0, 3)} />
        <Chart.Tooltip content={<Chart.TooltipContent />} />
        <Bar dataKey="desktop" fill="var(--color-desktop)" radius={4} />
        <Bar dataKey="mobile" fill="var(--color-mobile)" radius={4} />
      </BarChart>
  },
  render: args => <Chart {...args} />
}`,...(ue=(me=G.parameters)==null?void 0:me.docs)==null?void 0:ue.source},description:{story:'A bar chart example with a legend included to enhance data comprehension.\nThis chart provides a monthly breakdown for "Desktop" and "Mobile" metrics, utilizing the\n`CartesianGrid`, `XAxis`, `Chart.Tooltip`, and `Chart.Legend` components from Recharts.\nThe legend helps conveniently identify data categories, improving readability.',...(xe=(ye=G.parameters)==null?void 0:ye.docs)==null?void 0:xe.description}}};var ge,pe,ve,be,Ce;T.parameters={...T.parameters,docs:{...(ge=T.parameters)==null?void 0:ge.docs,source:{originalSource:`{
  args: {
    config: barChartConfig,
    className: 'min-h-[200px] w-screen max-w-[400px]',
    children: <BarChart accessibilityLayer data={barChartData}>
        <CartesianGrid vertical={false} />
        <XAxis dataKey="month" tickLine={false} tickMargin={10} axisLine={false} tickFormatter={value => value.slice(0, 3)} />
        <Chart.Tooltip content={<Chart.TooltipContent />} />
        <Chart.Legend content={<Chart.LegendContent />} />
        <Bar dataKey="desktop" fill="var(--color-desktop)" radius={4} />
        <Bar dataKey="mobile" fill="var(--color-mobile)" radius={4} />
      </BarChart>
  },
  render: args => <Chart {...args} />
}`,...(ve=(pe=T.parameters)==null?void 0:pe.docs)==null?void 0:ve.source},description:{story:'A bar chart example with a legend and tooltip for comprehensive data interpretation.\nThis chart provides a monthly breakdown for "Desktop" and "Mobile" metrics, leveraging several components\nfrom Recharts including `CartesianGrid`, `XAxis`, `Chart.Tooltip`, and `Chart.Legend`. The legend offers a clear\nidentification of data categories, while the tooltip enables detailed insights into each data point when hovered.\nUse this example to demonstrate advanced charting features for improved data readability and interaction.',...(Ce=(be=T.parameters)==null?void 0:be.docs)==null?void 0:Ce.description}}};const et=["BarChartExample","BarChartExampleWithGrid","BarChartExampleWithXAxis","BarChartExampleWithTooltip","BarChartExampleWithLegend"];export{L as BarChartExample,E as BarChartExampleWithGrid,T as BarChartExampleWithLegend,G as BarChartExampleWithTooltip,K as BarChartExampleWithXAxis,et as __namedExportsOrder,Ze as default};
